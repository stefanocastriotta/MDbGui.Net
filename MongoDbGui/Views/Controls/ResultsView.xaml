<UserControl x:Class="MongoDbGui.Views.Controls.ResultsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:MongoDbGui.Views.Controls"
             xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
             xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:utils="clr-namespace:MongoDbGui.Utils"
             xmlns:vm="clr-namespace:MongoDbGui.ViewModel"
             xmlns:listview="clr-namespace:BrightIdeasSoftware;assembly=ObjectListView"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="700">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <utils:StringToDocumentTextConverter x:Key="StringToDocumentTextConverter" />
            <utils:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <utils:NullValueToVisibilityConverter x:Key="NullValueToVisibilityConverter" />
            <!-- Remove listview selected item overlay http://stackoverflow.com/questions/1051215/wpf-listview-turn-off-selection/16024204#16024204 -->
            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate x:Key="FindTemplate">
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Label Content="Find"></Label>
                    <TextBox Grid.Column="1" Text="{Binding Find}" Style="{StaticResource ResultsView}"></TextBox>

                    <Label Grid.Row="1" Content="Sort"></Label>
                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Sort}" Style="{StaticResource ResultsView}"></TextBox>
                    <StackPanel Grid.Row="2" Orientation="Horizontal">
                        <Button Command="{Binding ExecuteFind}" Content="Find"></Button>
                        <Button Command="{Binding ExecuteCount}" Content="Count"></Button>
                    </StackPanel>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="CommandTemplate">
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Label Content="Command"></Label>
                    <TextBox Grid.Column="1" Text="{Binding Command}" Style="{StaticResource ResultsView}"></TextBox>
                    <Button Grid.Row="1" Command="{Binding ExecuteCommand}" Content="Execute"></Button>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="25"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>

        <ContentControl Content="{Binding}">
            <ContentControl.Style>
                <Style TargetType="ContentControl">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CommandType}" Value="Find">
                            <Setter Property="ContentTemplate" Value="{StaticResource FindTemplate}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CommandType}" Value="Command">
                            <Setter Property="ContentTemplate" Value="{StaticResource CommandTemplate}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>

        <DockPanel Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Stretch" LastChildFill="False">
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                <fa:ImageAwesome Spin="True" Icon="Refresh" Height="18" Width="18" Visibility="{Binding Executing, Converter={StaticResource BooleanToVisibilityConverter}}"></fa:ImageAwesome>
                <Label Content="Executing command" Visibility="{Binding Executing, Converter={StaticResource BooleanToVisibilityConverter}}"></Label>
                <Label Content="Execution completed" Visibility="{Binding Executing, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=false}"></Label>
                <Label Content="{Binding ExecutingTime}"></Label>
            </StackPanel>
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                <Button Height="18" Width="22" Command="{Binding ExecuteFind}">
                    <StackPanel Orientation="Horizontal">
                        <fa:ImageAwesome Icon="CaretLeft"></fa:ImageAwesome>
                        <fa:ImageAwesome Icon="CaretLeft"></fa:ImageAwesome>
                    </StackPanel>
                </Button>
                <Button Height="18" Width="18" Command="{Binding PageBack}">
                    <fa:ImageAwesome Icon="CaretLeft"></fa:ImageAwesome>
                </Button>
                <TextBox Width="30" Height="18" Style="{StaticResource ResultsView}" Text="{Binding Skip, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True">
                    <TextBox.InputBindings>
                        <KeyBinding Command="{Binding DoPaging}" Key="Enter" />
                    </TextBox.InputBindings>
                </TextBox>
                <TextBox Width="30" Height="18" Style="{StaticResource ResultsView}" Text="{Binding Size, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True">
                    <TextBox.InputBindings>
                        <KeyBinding Command="{Binding DoPaging}" Key="Enter" />
                    </TextBox.InputBindings>
                </TextBox>
                <Button Height="18" Width="18" Command="{Binding PageForward}">
                    <fa:ImageAwesome Icon="CaretRight"></fa:ImageAwesome>
                </Button>
            </StackPanel>
        </DockPanel>
        <TabControl Grid.Row="2">
            <TabItem Header="Treeview">
                <TreeView HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding Results}">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultViewModel}" ItemsSource="{Binding Elements}">
                            <TextBlock DockPanel.Dock="Left" Text="{Binding Index, StringFormat=# {0:#}}">
                                <TextBlock.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Copy to clipboard" Command="{Binding Path=CopyToClipboard}" />
                                        <Separator/>
                                        <MenuItem Header="Edit..." Command="{Binding Path=EditResult}" />
                                        <MenuItem Header="Delete..." Command="{Binding Path=ConfirmDeleteResult}" />
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </HierarchicalDataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultItemViewModel}" ItemsSource="{Binding Children}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="5,0,0,0" Text="{Binding Name}" />
                                <TextBlock Margin="5,0,0,0" Text="{Binding Value}" />
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>
            </TabItem>
            <TabItem Header="Raw">
                <avalonEdit:TextEditor Name="txtEditor" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch"
            Visibility="{Binding RawResult, Converter={StaticResource NullValueToVisibilityConverter}, ConverterParameter=false}" 
            Document="{Binding RawResult, Converter={StaticResource StringToDocumentTextConverter}}" HorizontalScrollBarVisibility="Disabled"
            Background="Black" Foreground="White" FontFamily="Courier New" IsReadOnly="True" SyntaxHighlighting="Bson">
                    <ContextMenuService.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Copy to clipboard" Command="{Binding Path=CopyToClipboard}" />
                        </ContextMenu>
                    </ContextMenuService.ContextMenu>
                </avalonEdit:TextEditor>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
