<UserControl x:Class="MDbGui.Net.Views.Controls.ResultsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:MDbGui.Net.Views.Controls"
             xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
             xmlns:utils="clr-namespace:MDbGui.Net.Utils"
             xmlns:vm="clr-namespace:MDbGui.Net.ViewModel"
             xmlns:tv="clr-namespace:ICSharpCode.TreeView;assembly=ICSharpCode.TreeView"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="700">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MDbGui.Net;component/Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <utils:StringToDocumentTextConverter x:Key="StringToDocumentTextConverter" />
            <!-- Remove listview selected item overlay http://stackoverflow.com/questions/1051215/wpf-listview-turn-off-selection/16024204#16024204 -->
            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <fa:ImageAwesome Icon="Server" Width="16" Height="16" Margin="0,0,5,0"></fa:ImageAwesome>
            <ComboBox Grid.Column="1" Margin="0,0,10,0" IsSynchronizedWithCurrentItem="True" ItemsSource="{Binding Connections}" SelectedValue="{Binding Service}" SelectedValuePath="Service" DisplayMemberPath="Name"></ComboBox>
            <fa:ImageAwesome Grid.Column="2" Icon="Database" Width="16" Height="16" Margin="0,0,5,0"></fa:ImageAwesome>
            <TextBox Grid.Column="3" Margin="0,0,10,0" Text="{Binding Database}"></TextBox>
            <fa:ImageAwesome Grid.Column="4" Icon="Table" Width="16" Height="16" Margin="0,0,5,0"></fa:ImageAwesome>
            <TextBox Grid.Column="5" Text="{Binding Collection}"></TextBox>
        </Grid>
        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,5">
            <TextBlock Text="Operation"></TextBlock>
            <ComboBox ItemsSource="{Binding CommandTypes}" DisplayMemberPath="Value" SelectedValuePath="Key" SelectedValue="{Binding Path=CommandType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            </ComboBox>
        </StackPanel>
        <ContentControl Grid.Row="2" Content="{Binding}">
            <ContentControl.Resources>
                <DataTemplate x:Key="FindTemplate">
                    <local:FindView></local:FindView>
                </DataTemplate>
                <DataTemplate x:Key="CommandTemplate">
                    <local:CommandView></local:CommandView>
                </DataTemplate>
                <DataTemplate x:Key="EvalTemplate">
                    <local:EvalView></local:EvalView>
                </DataTemplate>
                <DataTemplate x:Key="InsertTemplate">
                    <local:InsertView></local:InsertView>
                </DataTemplate>
                <DataTemplate x:Key="UpdateTemplate">
                    <local:UpdateView></local:UpdateView>
                </DataTemplate>
                <DataTemplate x:Key="ReplaceTemplate">
                    <local:ReplaceView></local:ReplaceView>
                </DataTemplate>
                <DataTemplate x:Key="RemoveTemplate">
                    <local:RemoveView></local:RemoveView>
                </DataTemplate>
                <DataTemplate x:Key="AggregateTemplate">
                    <local:AggregateView></local:AggregateView>
                </DataTemplate>
                <DataTemplate x:Key="DistinctTemplate">
                    <local:DistinctView></local:DistinctView>
                </DataTemplate>
            </ContentControl.Resources>
            <ContentControl.Style>
                <Style TargetType="ContentControl">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CommandType}" Value="Find">
                            <Setter Property="ContentTemplate" Value="{StaticResource FindTemplate}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CommandType}" Value="RunCommand">
                            <Setter Property="ContentTemplate" Value="{StaticResource CommandTemplate}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CommandType}" Value="Eval">
                            <Setter Property="ContentTemplate" Value="{StaticResource EvalTemplate}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CommandType}" Value="Insert">
                            <Setter Property="ContentTemplate" Value="{StaticResource InsertTemplate}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CommandType}" Value="Update">
                            <Setter Property="ContentTemplate" Value="{StaticResource UpdateTemplate}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CommandType}" Value="Replace">
                            <Setter Property="ContentTemplate" Value="{StaticResource ReplaceTemplate}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CommandType}" Value="Remove">
                            <Setter Property="ContentTemplate" Value="{StaticResource RemoveTemplate}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CommandType}" Value="Aggregate">
                            <Setter Property="ContentTemplate" Value="{StaticResource AggregateTemplate}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CommandType}" Value="Distinct">
                            <Setter Property="ContentTemplate" Value="{StaticResource DistinctTemplate}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>

        <DockPanel Grid.Row="3" VerticalAlignment="Top" HorizontalAlignment="Stretch" LastChildFill="False" >
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" Visibility="{Binding ShowProgress, Converter={StaticResource BooleanToVisibilityConverter}}">
                <fa:ImageAwesome Spin="True" Icon="Refresh" Height="18" Width="18" Visibility="{Binding Executing, Converter={StaticResource BooleanToVisibilityConverter}}"></fa:ImageAwesome>
                <Label Content="Executing command" Visibility="{Binding Executing, Converter={StaticResource BooleanToVisibilityConverter}}"></Label>
                <Button Visibility="{Binding Executing, Converter={StaticResource BooleanToVisibilityConverter}}" Content="Stop" Command="{Binding ExecuteStop}"></Button>
                <Label Content="Execution completed" Visibility="{Binding Executing, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=false}"></Label>
                <Label Content="{Binding ExecutingTime}"></Label>
            </StackPanel>
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" Visibility="{Binding ShowPager, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button Height="18" Width="22" Command="{Binding ExecuteFind}">
                    <StackPanel Orientation="Horizontal">
                        <fa:ImageAwesome Icon="CaretLeft"></fa:ImageAwesome>
                        <fa:ImageAwesome Icon="CaretLeft"></fa:ImageAwesome>
                    </StackPanel>
                </Button>
                <Button Height="18" Width="18" Command="{Binding PageBack}">
                    <fa:ImageAwesome Icon="CaretLeft"></fa:ImageAwesome>
                </Button>
                <TextBox Width="30" Height="18" Style="{StaticResource ResultsView}" Text="{Binding Skip, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True">
                    <TextBox.InputBindings>
                        <KeyBinding Command="{Binding DoPaging}" CommandParameter="false" Key="Enter" />
                    </TextBox.InputBindings>
                </TextBox>
                <TextBox Width="30" Height="18" Style="{StaticResource ResultsView}" Text="{Binding Size, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True">
                    <TextBox.InputBindings>
                        <KeyBinding Command="{Binding DoPaging}" CommandParameter="false" Key="Enter" />
                    </TextBox.InputBindings>
                </TextBox>
                <Button Height="18" Width="18" Command="{Binding PageForward}">
                    <fa:ImageAwesome Icon="CaretRight"></fa:ImageAwesome>
                </Button>
            </StackPanel>
        </DockPanel>
        <TabControl Grid.Row="4" SelectedIndex="{Binding SelectedViewIndex}" Visibility="{Binding RawResult, Converter={StaticResource NullValueToVisibilityConverter}}">
            <TabItem Header="Treeview" Visibility="{Binding Root, Converter={StaticResource NullValueToVisibilityConverter}}">
                <tv:SharpTreeView Root="{Binding Root}" ShowRoot="False">
                    <ListView.View>
                        <tv:SharpGridView x:Name="grdView">
                            <GridView.Columns>
                                <GridViewColumn Header="Name">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <tv:SharpTreeNodeView />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Value">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Value}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Type">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Type}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView.Columns>
                        </tv:SharpGridView>
                    </ListView.View>
                </tv:SharpTreeView>
            </TabItem>
            <TabItem Header="Raw">
                <local:TextEditorExt Visibility="{Binding RawResult, Converter={StaticResource NullValueToVisibilityConverter}, ConverterParameter=false}" 
            Document="{Binding RawResult, Converter={StaticResource StringToDocumentTextConverter}}" IsReadOnly="True">
                    <ContextMenuService.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Copy to clipboard" Command="{Binding Path=CopyToClipboard}" />
                        </ContextMenu>
                    </ContextMenuService.ContextMenu>
                </local:TextEditorExt>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
